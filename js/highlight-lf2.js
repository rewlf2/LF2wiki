(function () {
    if (!window.hljs) return;

    const attributes = [
        'aaction:',
        'act:',
        'action:',
        'arest:',
        'attacking:',
        'backhurtact:',
        'bdefend:',
        'bound:',
        'c1:',
        'c2:',
        'catchingact:',
        'caughtact:',
        'cc:',
        'centery:',
        'col:',
        'cover:',
        'dvx:',
        'dvy:',
        'dvz:',
        'centerx:',
        'dash_height',
        'dash_distance',
        'dash_distancez',
        'decrease:',
        'dircontrol:',
        'entry:',
        'fall:',
        'facing:',
        'file:',
        'fronthurtact:',
        'h:',
        'head:',
        'heavy_running_speed',
        'heavy_running_speedz',
        'heavy_walking_speed',
        'heavy_walking_speedz',
        'height:',
        'hit_a:',
        'hit_d:',
        'hit_j:',
        'hit_Da:',
        'hit_Dj:',
        'hit_Fa:',
        'hit_Fj:',
        'hit_ja:',
        'hit_Ua:',
        'hit_Uj:',
        'hp:',
        'hurtable:',
        'id:',
        'injury:',
        'jaction:',
        'join:',
        'jump_height',
        'jump_distance',
        'jump_distancez',
        'kind:',
        'loop:',
        'mp:',
        'name:',
        'music:',
        'next:',
        'oid:',
        'pic:',
        'ratio:',
        'rect:',
        'reserve:',
        'running_frame_rate',
        'running_speed',
        'running_speedz',
        'row:',
        'rowing_height',
        'rowing_distance',
        'shadow:',
        'shadowsize:',
        'small:',
        'sound:',
        'state:',
        'taction:',
        'transparency:',
        'times:',
        'throwinjury:',
        'throwvx:',
        'throwvy:',
        'throwvz:',
        'vaction:',
        'vrest:',
        'w:',
        'wait:',
        'walking_frame_rate',
        'walking_speed',
        'walking_speedz',
        'weaponact:',
        'weapon_broken_sound:',
        'weapon_drop_sound:',
        'weapon_drop_hurt:',
        'weapon_hit_sound:',
        'weapon_hp:',
        'width:',
        'x:',
        'y:',
        'zboundary:',
        'zwidth:',
        'type:',
    ];

    const specialAttributes = ['effect:', 'when_clear_goto_phase:', 'invisible'];

    const attrArea = [
        'bdy:',
        'bdy_end:',
        'bpoint:',
        'bpoint_end:',
        'cpoint:',
        'cpoint_end:',
        'itr:',
        'itr_end:',
        'layer:',
        'layer_end',
        'opoint:',
        'opoint_end:',
        'wpoint:',
        'wpoint_end:',
    ];

    const tags = [
        '<bmp_begin>',
        '<bmp_end>',
        '<end>',
        '<frame>',
        '<frame_end>',
        '<phase>',
        '<phase_end>',
        '<stage>',
        '<stage_end>',
        '<weapon_strength_list>',
        '<weapon_strength_list_end>',
        '<object>',
        '<object_end>',
        '<file_editing>',
        '<file_editing_end>',
        '<background>',
        '<background_end>',
    ];

    const specialTags = ['<soldier>', '<boss>'];

    hljs.registerLanguage("lf2",
        function (hljs) {
            return {
                aliases: ["dc", "lf2-data", "lf-data"],
                case_insensitive: true,
                keywords: {
                    $pattern: /[^\s]+/ig,
                    attributes: attributes.join(" "),
                    "special-attributes": specialAttributes.join(" "),
                    "attr-area": attrArea.join(" "),
                    tags: tags.join(" "),
                    "special-tags": specialTags.join(" "),
                },
                contains: [
                    {
                        begin: /(?<=<frame>\s*\d+\s)[^\n\r]+/ig,
                        className: "frame-name",
                    },
                    {
                        begin: /(?<=<frame>)\s*\d+/ig,
                        className: "frame-id",
                    },
                    {
                        begin: /[^\s\n\r]+\.(bmp|png|wav|mp3)/ig, // "end" doesnt work wtf. begin does what i want...
                        className: "file",
                        relevance: 0,
                    },
                    {
                        begin: /\d+/ig,
                        className: "number-lf2",
                    },
                    {
                        begin: /(?<=entry:\s*\d+)\s*[^\s\r\n]+/ig,
                        className: "weapon-entry",
                    },
                    {
                        begin: /#[^\r\n]+/ig,
                        className: "fake-comment",
                    },
                ]
            };
        }
    );
})()
